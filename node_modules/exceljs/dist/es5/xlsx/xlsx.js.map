{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","ZipStream","StreamBuf","PromiseLib","utils","XmlStream","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","workbook","stream","exists","then","Error","createReadStream","read","close","xform","parseStream","model","workbookXform","worksheetXform","drawingXform","reconcile","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","sheetOptions","styles","sharedStrings","date1904","properties","comments","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","entry","match","path","push","undefined","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","themes","toString","autodrain","promises","ZipReader","getEntryType","promise","entryPath","parseRels","parseWorkbook","sheets","definedNames","views","appXform","appProperties","assign","company","manager","coreXform","coreProperties","processWorksheetEntry","processWorksheetRelsEntry","processThemeEntry","processMediaEntry","processDrawingEntry","processCommentEntry","processDrawingRelsEntry","processIgnoreEntry","destroy","all","emit","zipStream","createInputStream","base64","Buffer","from","write","end","zip","map","append","dataimg64","content","substring","indexOf","relsXform","prepare","xml","toXml","theme1","Type","RelType","OfficeDocument","Target","CoreProperties","ExtenderProperties","count","Styles","Theme","SharedStrings","rId","Worksheet","id","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","finalize","creator","lastModifiedBy","created","Date","modified","useSharedStrings","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","ZipWriter","prepareModel","addContentTypes","addOfficeRels","addWorkbookRels","addWorksheets","addSharedStrings","addDrawings","addThemes","addStyles","addMedia","afters","addApp","addCore","addWorkbook","_finalize","createWriteStream","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\nconst ZipStream = require('../utils/zip-stream');\nconst StreamBuf = require('../utils/stream-buf');\nconst PromiseLib = require('../utils/promise');\n\nconst utils = require('../utils/utils');\nconst XmlStream = require('../utils/xml-stream');\n\nconst StylesXform = require('./xform/style/styles-xform');\n\nconst CoreXform = require('./xform/core/core-xform');\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\nconst RelationshipsXform = require('./xform/core/relationships-xform');\nconst ContentTypesXform = require('./xform/core/content-types-xform');\nconst AppXform = require('./xform/core/app-xform');\nconst WorkbookXform = require('./xform/book/workbook-xform');\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\nconst DrawingXform = require('./xform/drawing/drawing-xform');\nconst CommentsXform = require('./xform/comment/comments-xform');\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\n\nconst theme1Xml = require('./xml/theme1.js');\n\nfunction fsReadFileAsync(filename, options) {\n  return new PromiseLib.Promise((resolve, reject) => {\n    fs.readFile(filename, options, (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nclass XLSX {\n  constructor(workbook) {\n    this.workbook = workbook;\n  }\n\n  // ===============================================================================\n  // Workbook\n  // =========================================================================\n  // Read\n\n  readFile(filename, options) {\n    let stream;\n    return utils.fs\n      .exists(filename)\n      .then(exists => {\n        if (!exists) {\n          throw new Error(`File not found: ${filename}`);\n        }\n        stream = fs.createReadStream(filename);\n        return this.read(stream, options).catch(error => {\n          stream.close();\n          throw error;\n        });\n      })\n      .then(workbook => {\n        stream.close();\n        return workbook;\n      });\n  }\n\n  parseRels(stream) {\n    const xform = new RelationshipsXform();\n    return xform.parseStream(stream);\n  }\n\n  parseWorkbook(stream) {\n    const xform = new WorkbookXform();\n    return xform.parseStream(stream);\n  }\n\n  parseSharedStrings(stream) {\n    const xform = new SharedStringsXform();\n    return xform.parseStream(stream);\n  }\n\n  reconcile(model, options) {\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform(options);\n    const drawingXform = new DrawingXform();\n\n    workbookXform.reconcile(model);\n\n    // reconcile drawings with their rels\n    const drawingOptions = {\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n    };\n    Object.keys(model.drawings).forEach(name => {\n      const drawing = model.drawings[name];\n      const drawingRel = model.drawingRels[name];\n      if (drawingRel) {\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\n          o[rel.Id] = rel;\n          return o;\n        }, {});\n        drawingXform.reconcile(drawing, drawingOptions);\n      }\n    });\n\n    const sheetOptions = {\n      styles: model.styles,\n      sharedStrings: model.sharedStrings,\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n      date1904: model.properties && model.properties.date1904,\n      drawings: model.drawings,\n      comments: model.comments,\n    };\n    model.worksheets.forEach(worksheet => {\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\n      worksheetXform.reconcile(worksheet, sheetOptions);\n    });\n\n    // delete unnecessary parts\n    delete model.worksheetHash;\n    delete model.worksheetRels;\n    delete model.globalRels;\n    delete model.sharedStrings;\n    delete model.workbookRels;\n    delete model.sheetDefs;\n    delete model.styles;\n    delete model.mediaIndex;\n    delete model.drawings;\n    delete model.drawingRels;\n  }\n\n  processWorksheetEntry(entry, model, options) {\n    const match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new WorksheetXform(options);\n      return xform.parseStream(entry)\n        .then(worksheet => {\n          worksheet.sheetNo = sheetNo;\n          model.worksheetHash[entry.path] = worksheet;\n          model.worksheets.push(worksheet);\n        });\n    }\n    return undefined;\n  }\n\n  processCommentEntry(entry, model) {\n    const match = entry.path.match(/xl\\/(comments\\d+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new CommentsXform();\n      return xform.parseStream(entry)\n        .then(comments => {\n          model.comments[`../${name}.xml`] = comments;\n        });\n    }\n    return undefined;\n  }\n\n  processWorksheetRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry)\n        .then(relationships => {\n          model.worksheetRels[sheetNo] = relationships;\n        });\n    }\n    return undefined;\n  }\n\n  processMediaEntry(entry, model) {\n    const match = entry.path.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\n    if (match) {\n      const filename = match[1];\n      const lastDot = filename.lastIndexOf('.');\n      if (lastDot === -1) {\n        // if we can't determine extension, ignore it\n        return undefined;\n      }\n      const extension = filename.substr(lastDot + 1);\n      const name = filename.substr(0, lastDot);\n      return new PromiseLib.Promise((resolve, reject) => {\n        const streamBuf = new StreamBuf();\n        streamBuf.on('finish', () => {\n          model.mediaIndex[filename] = model.media.length;\n          model.mediaIndex[name] = model.media.length;\n          const medium = {\n            type: 'image',\n            name,\n            extension,\n            buffer: streamBuf.toBuffer(),\n          };\n          model.media.push(medium);\n          resolve();\n        });\n        entry.on('error', error => {\n          reject(error);\n        });\n        entry.pipe(streamBuf);\n      });\n    }\n    return undefined;\n  }\n\n  processDrawingEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new DrawingXform();\n      return xform.parseStream(entry)\n        .then(drawing => {\n          model.drawings[name] = drawing;\n        });\n    }\n    return undefined;\n  }\n\n  processDrawingRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\n    if (match) {\n      const name = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry)\n        .then(relationships => {\n          model.drawingRels[name] = relationships;\n        });\n    }\n    return undefined;\n  }\n\n  processThemeEntry(entry, model) {\n    const match = entry.path.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      return new PromiseLib.Promise((resolve, reject) => {\n        const name = match[1];\n        // TODO: stream entry into buffer and store the xml in the model.themes[]\n        const stream = new StreamBuf();\n        entry.on('error', reject);\n        stream.on('error', reject);\n        stream.on('finish', () => {\n          model.themes[name] = stream.read().toString();\n          resolve();\n        });\n        entry.pipe(stream);\n      });\n    }\n    return undefined;\n  }\n\n  processIgnoreEntry(entry) {\n    entry.autodrain();\n  }\n\n  createInputStream(options) {\n    const model = {\n      worksheets: [],\n      worksheetHash: {},\n      worksheetRels: [],\n      themes: {},\n      media: [],\n      mediaIndex: {},\n      drawings: {},\n      drawingRels: {},\n      comments: {},\n    };\n\n    // we have to be prepared to read the zip entries in whatever order they arrive\n    const promises = [];\n    const stream = new ZipStream.ZipReader({\n      getEntryType: path => (path.match(/xl\\/media\\//) ? 'nodebuffer' : 'string'),\n    });\n    stream.on('entry', entry => {\n      let promise = null;\n\n      let entryPath = entry.path;\n      if (entryPath[0] === '/') {\n        entryPath = entryPath.substr(1);\n      }\n      switch (entryPath) {\n        case '_rels/.rels':\n          promise = this.parseRels(entry)\n            .then(relationships => {\n              model.globalRels = relationships;\n            });\n          break;\n\n        case 'xl/workbook.xml':\n          promise = this.parseWorkbook(entry)\n            .then(workbook => {\n              model.sheets = workbook.sheets;\n              model.definedNames = workbook.definedNames;\n              model.views = workbook.views;\n              model.properties = workbook.properties;\n            });\n          break;\n\n        case 'xl/_rels/workbook.xml.rels':\n          promise = this.parseRels(entry)\n            .then(relationships => {\n              model.workbookRels = relationships;\n            });\n          break;\n\n        case 'xl/sharedStrings.xml':\n          model.sharedStrings = new SharedStringsXform();\n          promise = model.sharedStrings.parseStream(entry);\n          break;\n\n        case 'xl/styles.xml':\n          model.styles = new StylesXform();\n          promise = model.styles.parseStream(entry);\n          break;\n\n        case 'docProps/app.xml': {\n          const appXform = new AppXform();\n          promise = appXform.parseStream(entry)\n            .then(appProperties => {\n              Object.assign(model, {\n                company: appProperties.company,\n                manager: appProperties.manager,\n              });\n            });\n          break;\n        }\n\n        case 'docProps/core.xml': {\n          const coreXform = new CoreXform();\n          promise = coreXform.parseStream(entry)\n            .then(coreProperties => {\n              Object.assign(model, coreProperties);\n            });\n          break;\n        }\n\n        default:\n          promise =\n            this.processWorksheetEntry(entry, model, options) ||\n            this.processWorksheetRelsEntry(entry, model) ||\n            this.processThemeEntry(entry, model) ||\n            this.processMediaEntry(entry, model) ||\n            this.processDrawingEntry(entry, model) ||\n            this.processCommentEntry(entry, model) ||\n            this.processDrawingRelsEntry(entry, model) ||\n            this.processIgnoreEntry(entry);\n          break;\n      }\n\n      if (promise) {\n        promise = promise.catch(error => {\n          stream.destroy(error);\n          throw error;\n        });\n\n        promises.push(promise);\n        promise = null;\n      }\n    });\n    stream.on('finished', () => {\n      PromiseLib.Promise.all(promises)\n        .then(() => {\n          this.reconcile(model, options);\n\n          // apply model\n          this.workbook.model = model;\n        })\n        .then(() => {\n          stream.emit('done');\n        })\n        .catch(error => {\n          stream.emit('error', error);\n        });\n    });\n    return stream;\n  }\n\n  read(stream, options) {\n    options = options || {};\n    const zipStream = this.createInputStream(options);\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(this.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n      stream.pipe(zipStream);\n    });\n  }\n\n  load(data, options) {\n    if (options === undefined) {\n      options = {};\n    }\n    const zipStream = this.createInputStream();\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(this.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n\n      if (options.base64) {\n        const buffer = Buffer.from(data.toString(), 'base64');\n        zipStream.write(buffer);\n      } else {\n        zipStream.write(data);\n      }\n      zipStream.end();\n    });\n  }\n\n  // =========================================================================\n  // Write\n\n  addMedia(zip, model) {\n    return PromiseLib.Promise.all(\n      model.media.map(medium => {\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\n          if (medium.filename) {\n            return fsReadFileAsync(medium.filename)\n              .then(data => {\n                zip.append(data, {name: filename});\n              });\n          }\n          if (medium.buffer) {\n            return new PromiseLib.Promise(resolve => {\n              zip.append(medium.buffer, {name: filename});\n              resolve();\n            });\n          }\n          if (medium.base64) {\n            return new PromiseLib.Promise(resolve => {\n              const dataimg64 = medium.base64;\n              const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n              zip.append(content, {name: filename, base64: true});\n              resolve();\n            });\n          }\n        }\n        return PromiseLib.Promise.reject(new Error('Unsupported media'));\n      })\n    );\n  }\n\n  addDrawings(zip, model) {\n    const drawingXform = new DrawingXform();\n    const relsXform = new RelationshipsXform();\n    const promises = [];\n\n    model.worksheets.forEach(worksheet => {\n      const {drawing} = worksheet;\n      if (drawing) {\n        promises.push(\n          new PromiseLib.Promise(resolve => {\n            drawingXform.prepare(drawing, {});\n            let xml = drawingXform.toXml(drawing);\n            zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\n\n            xml = relsXform.toXml(drawing.rels);\n            zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\n\n            resolve();\n          })\n        );\n      }\n    });\n\n    return PromiseLib.Promise.all(promises);\n  }\n\n  addContentTypes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new ContentTypesXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, {name: '[Content_Types].xml'});\n      resolve();\n    });\n  }\n\n  addApp(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new AppXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, {name: 'docProps/app.xml'});\n      resolve();\n    });\n  }\n\n  addCore(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const coreXform = new CoreXform();\n      zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\n      resolve();\n    });\n  }\n\n  addThemes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const themes = model.themes || {theme1: theme1Xml};\n      Object.keys(themes).forEach(name => {\n        const xml = themes[name];\n        const path = `xl/theme/${name}.xml`;\n        zip.append(xml, {name: path});\n      });\n      resolve();\n    });\n  }\n\n  addOfficeRels(zip) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml([\n        {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\n        {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\n        {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\n      ]);\n      zip.append(xml, {name: '_rels/.rels'});\n      resolve();\n    });\n  }\n\n  addWorkbookRels(zip, model) {\n    let count = 1;\n    const relationships = [\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\n    ];\n    if (model.sharedStrings.count) {\n      relationships.push({Id: `rId${count++}`, Type: XLSX.RelType.SharedStrings, Target: 'sharedStrings.xml'});\n    }\n    model.worksheets.forEach(worksheet => {\n      worksheet.rId = `rId${count++}`;\n      relationships.push({Id: worksheet.rId, Type: XLSX.RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml`});\n    });\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml(relationships);\n      zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\n      resolve();\n    });\n  }\n\n  addSharedStrings(zip, model) {\n    if (!model.sharedStrings || !model.sharedStrings.count) {\n      return PromiseLib.Promise.resolve();\n    }\n    return new PromiseLib.Promise(resolve => {\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\n      resolve();\n    });\n  }\n\n  addStyles(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const {xml} = model.styles;\n      if (xml) {\n        zip.append(xml, {name: 'xl/styles.xml'});\n      }\n      resolve();\n    });\n  }\n\n  addWorkbook(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new WorkbookXform();\n      zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\n      resolve();\n    });\n  }\n\n  addWorksheets(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      // preparation phase\n      const worksheetXform = new WorksheetXform();\n      const relationshipsXform = new RelationshipsXform();\n      const commentsXform = new CommentsXform();\n      const vmlNotesXform = new VmlNotesXform();\n\n      // write sheets\n      model.worksheets.forEach(worksheet => {\n        let xmlStream = new XmlStream();\n        worksheetXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\n\n        if (worksheet.rels && worksheet.rels.length) {\n          xmlStream = new XmlStream();\n          relationshipsXform.render(xmlStream, worksheet.rels);\n          zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\n        }\n\n        if (worksheet.comments.length > 0) {\n          xmlStream = new XmlStream();\n          commentsXform.render(xmlStream, worksheet);\n          zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\n\n          xmlStream = new XmlStream();\n          vmlNotesXform.render(xmlStream, worksheet);\n          zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\n        }\n      });\n\n      resolve();\n    });\n  }\n\n  _finalize(zip) {\n    return new PromiseLib.Promise((resolve, reject) => {\n      zip.on('finish', () => {\n        resolve(this);\n      });\n      zip.on('error', reject);\n      zip.finalize();\n    });\n  }\n\n  prepareModel(model, options) {\n    // ensure following properties have sane values\n    model.creator = model.creator || 'ExcelJS';\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\n    model.created = model.created || new Date();\n    model.modified = model.modified || new Date();\n\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\n\n    // Manage the shared strings\n    model.sharedStrings = new SharedStringsXform();\n\n    // add a style manager to handle cell formats, fonts, etc.\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\n\n    // prepare all of the things before the render\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform();\n\n    workbookXform.prepare(model);\n\n    const worksheetOptions = {\n      sharedStrings: model.sharedStrings,\n      styles: model.styles,\n      date1904: model.properties.date1904,\n      drawingsCount: 0,\n      media: model.media,\n    };\n    worksheetOptions.drawings = model.drawings = [];\n    worksheetOptions.commentRefs = model.commentRefs = [];\n    model.worksheets.forEach(worksheet => {\n      worksheetXform.prepare(worksheet, worksheetOptions);\n    });\n\n    // TODO: workbook drawing list\n  }\n\n  write(stream, options) {\n    options = options || {};\n    const {model} = this.workbook;\n    const zip = new ZipStream.ZipWriter(options.zip);\n    zip.pipe(stream);\n\n    this.prepareModel(model, options);\n\n    // render\n    return PromiseLib.Promise.resolve()\n      .then(() => this.addContentTypes(zip, model))\n      .then(() => this.addOfficeRels(zip, model))\n      .then(() => this.addWorkbookRels(zip, model))\n      .then(() => this.addWorksheets(zip, model))\n      .then(() => this.addSharedStrings(zip, model)) // always after worksheets\n      .then(() => this.addDrawings(zip, model))\n      .then(() => {\n        const promises = [this.addThemes(zip, model), this.addStyles(zip, model)];\n        return PromiseLib.Promise.all(promises);\n      })\n      .then(() => this.addMedia(zip, model))\n      .then(() => {\n        const afters = [this.addApp(zip, model), this.addCore(zip, model)];\n        return PromiseLib.Promise.all(afters);\n      })\n      .then(() => this.addWorkbook(zip, model))\n      .then(() => this._finalize(zip));\n  }\n\n  writeFile(filename, options) {\n    const stream = fs.createWriteStream(filename);\n\n    return new PromiseLib.Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        resolve();\n      });\n      stream.on('error', error => {\n        reject(error);\n      });\n\n      this\n        .write(stream, options)\n        .then(() => {\n          stream.end();\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  writeBuffer(options) {\n    const stream = new StreamBuf();\n    return this.write(stream, options)\n      .then(() => stream.read());\n  }\n}\n\nXLSX.RelType = require('./rel-type');\n\nmodule.exports = XLSX;\n"],"file":"xlsx.js"}